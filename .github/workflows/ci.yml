name: CI

on:
  push:
    branches:
      - ci
  pull_request:
  schedule:
    - cron: "50 6 * * *"

# env:
#   rust_toolchain: nightly-x86_64-unknown-linux-gnu
#   esp_rust_toolchain: https://raw.githubusercontent.com/esp-rs/rust-build/main/install-rust-toolchain.sh

jobs:
  compile:
    name: Build
    runs-on: ubuntu-latest
    container: espressif/idf-rust:latest
    steps:
      - name: Setup | Checkout
        uses: actions/checkout@v2
      - name: Check | Look around
        run: ls -al
      - name: Check | Rust jazz
        run: rustup toolchain list
      # - name: Check | Espflash
      #  run: cargo espflash --version
      # - name: Build | Cargo build
      #  run: export RUST_ESP32_STD_DEMO_WIFI_SSID=ssid; export RUST_ESP32_STD_DEMO_WIFI_PASS=pass; cargo build
      # - name: Build | Extract firmware file
      #  run: espflash ./target/xtensa-esp32-espidf/debug/rust-esp32-std-demo save-image esp32 ./target/xtensa-esp32-espidf/debug/rust-esp32-std-demo firmware.bin
      # - name: Debug | Show and tell
      #  run: ls ./target/xtensa-esp32-espidf/debug
      # - uses: "marvinpinto/action-automatic-releases@latest"
      #   with:
      #     repo_token: "${{ secrets.GITHUB_TOKEN }}"
      #     prerelease: false
      #     title
      #     files: |
      #       LICENSE.txt
      #       *.jar

      # - name: Setup | Rust
      #   uses: actions-rs/toolchain@v1
      #   with:
      #     toolchain: ${{ env.rust_toolchain }}
      #     components: rustfmt, clippy
      # - name: Setup | Std
      #   run: rustup component add rust-src --toolchain ${{ env.rust_toolchain }}-x86_64-unknown-linux-gnu
      # - name: Setup | Default to nightly
      #   run: rustup default ${{ env.rust_toolchain }}
      # - name: Setup | ldproxy
      #   run: cargo install ldproxy
      # - name: Build | Fmt Check
      #   run: cargo fmt -- --check
      # - name: Build | Clippy
      #   run: export RUST_ESP32_STD_DEMO_WIFI_SSID=ssid; export RUST_ESP32_STD_DEMO_WIFI_PASS=pass; cargo clippy --no-deps --target riscv32imc-esp-espidf -- -Dwarnings
      # - name: Build | Compile
      #   run: export RUST_ESP32_STD_DEMO_WIFI_SSID=ssid; export RUST_ESP32_STD_DEMO_WIFI_PASS=pass; cargo build --target riscv32imc-esp-espidf
